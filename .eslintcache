[{"E:\\ReactJSApp\\job-listing-app\\src\\index.js":"1","E:\\ReactJSApp\\job-listing-app\\src\\App.js":"2","E:\\ReactJSApp\\job-listing-app\\src\\theme\\theme.js":"3","E:\\ReactJSApp\\job-listing-app\\src\\components\\Header\\index.js":"4","E:\\ReactJSApp\\job-listing-app\\src\\components\\SearchBar\\index.js":"5","E:\\ReactJSApp\\job-listing-app\\src\\components\\Job\\JobCard.js":"6","E:\\ReactJSApp\\job-listing-app\\src\\components\\Job\\NewJobModel.js":"7","E:\\ReactJSApp\\job-listing-app\\src\\dummyData.js":"8","E:\\ReactJSApp\\job-listing-app\\src\\firebase\\config.js":"9"},{"size":167,"mtime":1612344453057,"results":"10","hashOfConfig":"11"},{"size":2735,"mtime":1612342684342,"results":"12","hashOfConfig":"11"},{"size":948,"mtime":1612181902968,"results":"13","hashOfConfig":"11"},{"size":666,"mtime":1612297129956,"results":"14","hashOfConfig":"11"},{"size":2159,"mtime":1612343993380,"results":"15","hashOfConfig":"11"},{"size":2402,"mtime":1612270570055,"results":"16","hashOfConfig":"11"},{"size":7262,"mtime":1612347040172,"results":"17","hashOfConfig":"11"},{"size":904,"mtime":1612180133530,"results":"18","hashOfConfig":"11"},{"size":567,"mtime":1612277732498,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1mfixrh",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"E:\\ReactJSApp\\job-listing-app\\src\\index.js",[],["43","44"],"E:\\ReactJSApp\\job-listing-app\\src\\App.js",["45","46","47"],"import React, { useState, useEffect} from 'react';\nimport {Box, Grid,  ThemeProvider, CircularProgress, Button } from \"@material-ui/core\";\nimport theme from \"./theme/theme\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport JobCard from \"./components/Job/JobCard\";\nimport NewJobModel from \"./components/Job/NewJobModel\";\nimport fetchJobCustom from \"./components/Job/JobCard\";\nimport { firestore, app } from './firebase/config';\nimport {Close as CloseIcon } from '@material-ui/icons'\n\nexport default() => {\n  const [jobs, setJobs]= useState([]);\n  const [loading, setLoading]= useState(true);\n  const [customSearch, setCustomSearch] = useState(false);\n  const [newJobModel, setNewJobModel] = useState(false);\n\n  const fetchJobs = async() => {\n    setCustomSearch(false);\n    setLoading(true);\n    const req = await firestore\n    .collection(\"jobs\")\n    .orderBy(\"postedOn\", \"desc\")\n    .get();\n  const tempJobs = req.docs.map((job) => ({\n    ...job.data(),\n    id: job.id,\n    postedOn: job.data().postedOn.toDate(),\n  }));\n  setJobs(tempJobs);\n  setLoading(false);\n  };\n\n  const fetchJobCusom = async jobSearch => {\n    setLoading(true);\n    setCustomSearch(true);\n    const req = await firestore\n    .collection(\"jobs\")\n    .orderBy(\"postedOn\", \"desc\")\n    .where(\"location\", '==', jobSearch.location)\n    .where(\"type\", '==', jobSearch.type)\n    .get();\n  const tempJobs = req.docs.map((job) => ({\n    ...job.data(),\n    id: job.id,\n    postedOn: job.data().postedOn.toDate(),\n  }));\n  setJobs(tempJobs);\n  setLoading(false);\n  }\n\n  const postJob = async jobDetails => {\n    await firestore.collection('jobs').add({\n      ...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp()\n    });\n    fetchJobs();\n  }; \n\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  return (\n  <ThemeProvider theme = {theme} >\n    <Header openNewJobModel={() => setNewJobModel(true)} />\n    <NewJobModel closeModel={() => setNewJobModel(false)} \n    NewJobModel={NewJobModel}\n    postJob={postJob}\n    />\n    <Box mb={3}>\n    <Grid container justify=\"center\">\n      <Grid item xs={10}>\n        <SearchBar fetchJobCustom={fetchJobCustom} />\n        {loading ? (\n          <Box display=\"flex\" justifyContent=\"center\"> <CircularProgress /> </Box>\n        ): (\n          <>\n          {customSearch && (\n            <Box my={2} display=\"flex\" justifyContent=\"flex-end\">\n          <Button onClick={fetchJobs}>\n            <CloseIcon size={20} />\n            Custom Search\n          </Button>\n          </Box>\n          )}\n          {jobs.map((job) => (\n            <JobCard key={job.id} {...job}/>)\n          )}\n        </>\n        )}\n      </Grid>\n    </Grid>\n    </Box>\n  </ThemeProvider>\n  );\n};","E:\\ReactJSApp\\job-listing-app\\src\\theme\\theme.js",[],"E:\\ReactJSApp\\job-listing-app\\src\\components\\Header\\index.js",["48"],"import React from 'react';\r\nimport {Box, Grid, Typography, Button } from \"@material-ui/core\";\r\n\r\nexport default (props) => (\r\n    <Box py={10} bgcolor=\"secondary.main\" color= \"white\">\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={10}>\r\n                <Box display=\"flex\" justifyContent=\"space-between\">\r\n                    <Typography variant=\"h4\"> Open Job Listing </Typography>\r\n                    <Button onClick={props.openNewJobModel} variant=\"contained\" color=\"primary\" disableElevation>\r\n                        Post a Job\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    </Box>\r\n);","E:\\ReactJSApp\\job-listing-app\\src\\components\\SearchBar\\index.js",["49"],"import React, {useState} from 'react';\r\nimport {Box, Button, Select, MenuItem, makeStyles, CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        backgroundColor: \"#fff\",\r\n        display: \"flex\",\r\n        boxShadow: \"0px 1px 5px rgba(0,0,0,0.1)\",\r\n        borderRadius: \"5px\",\r\n        \"& > *\": {\r\n            flex: 1,\r\n            height: \"45px\",\r\n            margin: \"8px\",\r\n        },\r\n    },\r\n});\r\n\r\nexport default (props) => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [jobSearch, setJobSearch] = useState({\r\n        type: \"Full time\",\r\n        location: \"Remote\"\r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        e.persist();\r\n        setJobSearch((oldState) => ({\r\n            ...oldState,\r\n            [e.target.name]: e.target.value,\r\n        }));\r\n    };\r\n\r\n    const search = async () => {\r\n        setLoading(true);\r\n        await props.fetchJobCustom(jobSearch);\r\n        setLoading(false);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return(\r\n        <Box p={2} mt={-5} mb={2} className={classes.wrapper}>\r\n            <Select onChange={handleChange} value={jobSearch.type} name=\"type\" disableUnderline variant=\"filled\" defaultValue=\"Full time\">\r\n                <MenuItem value=\"Full time\"> Full time</MenuItem>\r\n                <MenuItem value=\"Part time\"> Part time</MenuItem>\r\n                <MenuItem value=\"Contract\"> Contract</MenuItem>\r\n            </Select>\r\n            <Select onChange={handleChange} value={jobSearch.location} name=\"location\" disableUnderline variant=\"filled\" defaultValue=\"Remote\">\r\n                <MenuItem value=\"Remote\"> Remote </MenuItem>\r\n                <MenuItem value=\"In-office\"> In-office </MenuItem>\r\n            </Select>\r\n            <Button\r\n            onClick={search} \r\n            disabled={loading} \r\n            variant = \"contained\" \r\n            color=\"primary\" \r\n            disableElevation> \r\n            {loading ? (\r\n                <CircularProgress color=\"secondary\" size={22} />\r\n                ) : (\r\n                    \"Search\" \r\n                )}\r\n            </Button>\r\n        </Box>\r\n    );\r\n};","E:\\ReactJSApp\\job-listing-app\\src\\components\\Job\\JobCard.js",["50","51"],"import React from 'react';\r\nimport { Box, Grid, Typography, Button, makeStyles } from \"@material-ui/core\";\r\nimport { differenceInMinutes } from 'date-fns';\r\n\r\nconst skills = [\"Javascript\", \"React.js\", \"Node.js\"];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        border: \"1px solid #e8e8e8\",\r\n        cursor: \"pointer\",\r\n        transition: '.3s',\r\n\r\n        \"&:hover\": {\r\n            boxShadow: \"0px 5px 25px rgba(0, 0, 0, 0.1)\",\r\n            borderLeft: \"6px solid #4D64E4\",\r\n        },\r\n    },\r\n    companyName:{\r\n        fontSize: \"13.5px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: theme.spacing(0.75),\r\n        borderRadius: \"5px\",\r\n        display: \"inline-block\",\r\n        fontWeight: 600,\r\n    },\r\n    skillChip: {\r\n        margin: theme.spacing(0.5),\r\n        padding: theme.spacing(0.75),\r\n        fontSize: \"14.5px\",\r\n        borderRadius: \"5px\",\r\n        fontWeight: 600,\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color: \"#fff\",\r\n    },\r\n}));\r\n\r\nexport default(props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box p={2} className={classes.wrapper}>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item xs>\r\n                    <Typography variant=\"subtitle1\"> {props.title} </Typography>\r\n                    <Typography className={classes.companyName} variant=\"subtitle1\"> {props.companyName} </Typography>\r\n                </Grid>\r\n                <Grid item container xs>\r\n                    {props.skills.map((skill) => (\r\n                        <Grid key = {skill} className={classes.skillChip} item>\r\n                        {skill}\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <Grid item container direction=\"column\" alignItems=\"flex-end\" xs>\r\n                    <Grid item>\r\n                        <Typography variant=\"caption\">\r\n                            {differenceInMinutes(Date.now(), props.postedOn)} min ago | {\" \"} {props.type} | {props.location}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Box mt={2}>\r\n                            <Button variant=\"outlined\"> Check </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};","E:\\ReactJSApp\\job-listing-app\\src\\components\\Job\\NewJobModel.js",["52"],"E:\\ReactJSApp\\job-listing-app\\src\\dummyData.js",["53"],"E:\\ReactJSApp\\job-listing-app\\src\\firebase\\config.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":12,"column":1,"nodeType":"60","endLine":96,"endColumn":3},{"ruleId":"61","severity":1,"message":"62","line":16,"column":10,"nodeType":"63","messageId":"64","endLine":16,"endColumn":21},{"ruleId":"61","severity":1,"message":"65","line":34,"column":9,"nodeType":"63","messageId":"64","endLine":34,"endColumn":22},{"ruleId":"58","severity":1,"message":"59","line":4,"column":1,"nodeType":"60","endLine":17,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":18,"column":1,"nodeType":"60","endLine":65,"endColumn":3},{"ruleId":"61","severity":1,"message":"66","line":5,"column":7,"nodeType":"63","messageId":"64","endLine":5,"endColumn":13},{"ruleId":"58","severity":1,"message":"59","line":37,"column":1,"nodeType":"60","endLine":68,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":38,"column":1,"nodeType":"60","endLine":196,"endColumn":3},{"ruleId":"58","severity":1,"message":"67","line":1,"column":1,"nodeType":"60","endLine":35,"endColumn":5},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'newJobModel' is assigned a value but never used.","Identifier","unusedVar","'fetchJobCusom' is assigned a value but never used.","'skills' is assigned a value but never used.","Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]